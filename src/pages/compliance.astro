---
import Layout from "../layouts/Layout.astro";
import ComplianceSidebar from "../components/ComplianceSidebar.astro";
import ComplianceColumn from "../components/ComplianceColumn.astro";
import { headers, inputs, formats, unCodes } from "../data/compliance";
import Spacer from "../components/Spacer.astro";
import { supabase } from "../lib/supabase";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/");
}

const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});

if (error) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/");
}

let columns;
let setupData;
if (Astro.request.method === "POST") {
  try {
    setupData = await Astro.request.formData();
    columns = setupData.get("columns");
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<script src="../scripts/complianceForm.ts"></script>

<!-- unfortunately the script/cdn must be used for pdfjs as far as i can tell as it does not work very well on serverless as a dependency -->
<script
  src="https://unpkg.com/pdfjs-dist@4.0.379/build/pdf.min.mjs"
  type="module"></script>

<script type="module">
  const { pdfjsLib } = globalThis;
  const msdsForm = document.getElementById("msdsForm");

  pdfjsLib.GlobalWorkerOptions.workerSrc =
    "https://unpkg.com/pdfjs-dist@4.0.379/build/pdf.worker.min.mjs";

  msdsForm?.addEventListener("submit", async (event) => {
    event.preventDefault(); // Prevent default form submission

    const formData = new FormData(msdsForm);

    const file = formData.get("MSDS");
    const pdfData = await file?.arrayBuffer();
    console.log(pdfData);

    const loadingTask = pdfjsLib.getDocument(pdfData);
    const pdf = await loadingTask.promise;

    let fullText = "";

    // Loop through each page to extract text
    for (let pageNumber = 1; pageNumber <= pdf.numPages; pageNumber++) {
      const page = await pdf.getPage(pageNumber);
      const textContent = await page.getTextContent();
      textContent.items.forEach((item) => {
        // Explicitly define the type of 'item'
        if ("str" in item) {
          fullText += item.str + " ";
        } else if ("textContent" in item) {
          fullText += item.textContent + " ";
        }
      });
    }

    console.log(fullText);
  });

  // Loading the PDF file
  

  // Initialize an empty string to store extracted text
</script>

<Layout>
  <nav
    class="flex h-12 w-full border-b items-center px-2 justify-between fixed top-20 bg-background z-50"
  >
    <div class="flex gap-2">
      <form
        action=""
        name="msdsForm"
        id="msdsForm"
        class="flex w-72"
        enctype="multipart/form-data"
        method="POST"
      >
        <input name="MSDS" id="MSDS" type="file" />
        <button class="btn text-xs" type="submit">Upload</button>
      </form>
    </div>
    <button class="btn text-xs" type="submit" form="complianceForm"
      >Submit</button
    >
  </nav>
  <Spacer height={12} />
  <div class="flex w-[10000px]">
    <ComplianceSidebar obj={headers} />

    <ComplianceColumn
      columns={columns}
      obj={inputs}
      formName="complianceForm"
      setupData={setupData}
    />
  </div>
</Layout>
